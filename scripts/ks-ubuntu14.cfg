#Generated by Kickstart Configurator
#platform=AMD64 or Intel EM64T

#System language
lang en_US
#Language modules to install
langsupport en_US
#System keyboard
keyboard us
#System mouse
mouse
#System timezone
timezone America/Los_Angeles
#Initial User
rootpw --iscrypted $1$f1h/jncQ$ZB2krovjq/6WU8ZiUDW7w1
#User
user test --fullname "Test Account" --iscrypted --password $1$apjy9T05$QoaDRPj8qJVTpiAxyFjfb1
#Reboot after installation
reboot
#Use text mode install
text
#Install OS instead of upgrade
install
#Use Web installation
url --url http://us.archive.ubuntu.com/ubuntu/
#System bootloader configuration
bootloader --location=mbr 
#Clear the Master Boot Record
zerombr yes
#Partition clearing information
#no clearpart --linux
#Disk partitioning information
#partitioning is too buggy in Ubuntu
#System authorization infomation
auth  --useshadow  --enablemd5
#Network information
network --bootproto=dhcp
#network --bootproto=dhcp
#Firewall configuration
firewall --disabled 
#X Window System configuration information
xconfig --depth=8 --defaultdesktop=GNOME --startxonboot
#Packages
%packages
openssh-server
openssh-client
ubuntu-desktop
curl
git
finger
links
lftp
g++
emacs
vim
default-jre
default-jdk
javacc
python3
IDLE
python-numpy
python-scipy
python-matplotlib
ipython
ipython-notebook
python-sklearn
SQLite
pymol
Weka
python-biopython
r-base
r-base-dev
Spark
scala
python-pip
mpich
openmpi-bin
openmpi-common
libopenmpi-dev
lam-runtime
gdb
valgrind
qemu-system
gcc-arm-linux-gnueabihf
python-setuptools
salt-minion
expect
traceroute
#Post Installation Script
%post
echo 'starting post installation script'
#Eclipse Java
cd /opt/
wget http://amstel/ubuntu14/mcscript/eclipse-java-mars-R-linux-gtk-x86_64.tar.gz
tar -zxvf eclipse-java-mars-R-linux-gtk-x86_64.tar.gz -C /opt
ln -s /opt/eclipse-java/eclipse /usr/local/bin/eclipse-java
cd /usr/share/applications
printf '[Desktop Entry]\nName=Eclipse-Java\nType=Application\nExec=/opt/eclipse-java/eclipse\nTerminal=false\nIcon=/opt/eclipse-java/icon.xpm\nComment=Integrated Development Environment\nNoDisplay=false\nCategories=Development;IDE;\nName[en]=Eclipse Java\nX-Desktop-File-Install-Version=0.22' | cat > eclipse-java.desktop
desktop-file-install /usr/share/applications/eclipse-java.desktop
cp /opt/eclipse-java/icon.xpm /usr/share/pixmaps/eclipse-java.xpm
#Eclipse C++
cd /opt
wget http://amstel/ubuntu14/mcscript/eclipse-cpp-mars-R-linux-gtk-x86_64.tar.gz
tar -zxvf eclipse-cpp-mars-R-linux-gtk-x86_64.tar.gz
mv eclipse eclipse-cpp
ln -s /opt/eclipse-cpp/eclipse /usr/local/bin/eclipse-cpp
printf '[Desktop Entry]\nName=Eclipse-CPP\nType=Application\nExec=/opt/eclipse-cpp/eclipse\nTerminal=false\nIcon=/opt/eclipse-cpp/icon.xpm\nComment=Integrated Development Environment\nNoDisplay=false\nCategories=Development;IDE;\nName[en]=Eclipse C++\nX-Desktop-File-Install-Version=0.22' | cat > eclipse-cpp.desktop
desktop-file-install /usr/share/applications/eclipse-cpp.desktop
cp /opt/eclipse-cpp/icon.xpm /usr/share/pixmaps/eclipse-cpp.xpm
#Pycharm
cd /opt/
wget -q -O - http://archive.getdeb.net/getdeb-archive.key | apt-key add -
sh -c 'echo "deb http://archive.getdeb.net/ubuntu $(lsb_release -sc)-getdeb apps" >> /etc/apt/sources.list.d/getdeb.list'
apt-get update -y
apt-get install -y pycharm
#Rstudio
cd /opt/
wget http://download1.rstudio.org/rstudio-0.98.1062-amd64.deb
dpkg -i rstudio-0.98.1062-amd64.deb
apt-get -f install -y
dpkg -i rstudio-0.98.1062-amd64.deb
#ActivePerl
cd /opt/
wget http://amstel/ubuntu14/mcscript/ActivePerl-5.20.2.2001-x86_64-linux-glibc-2.15-298913.tar.gz
tar -xvf ActivePerl-5.20.2.2001-x86_64-linux-glibc-2.15-298913.tar.gz
cd ActivePerl-5.20.2.2001-x86_64-linux-glibc-2.15-298913
printf 'yes\nyes\n\nyes\nyes\n' | ./install.sh
#Bioperl
cd /opt/
wget -N http://bioperl.org/DIST/current_core_unstable.tar.gz
cd bioperl-*
printf 'a\nyes\nyes\n1\nn\ny\ny\ny\ny\ny\na\n' | perl Build.PL
./Build test
./Build install
mv bioperl-1.5.2_102/ /opt/
#Pybrain
cd /opt/
git clone git://github.com/pybrain/pybrain.git pybrain
cd pybrain
python setup.py install
#gcc-4.9
cd /opt/
apt-get -f install -y
apt-get install -y ubuntu-dev-tools
pull-debian-source gcc-4.9
#Zerorpc
pip install zerorpc
#Sublime
add-apt-repository ppa:webupd8team/sublime-text-3
apt-get update -y
apt-get install -y sublime-text-installer
cd /usr/bin
mv /usr/bin/subl /usr/bin/sublime
#Android Studio
add-apt-repository ppa:paolorotolo/android-studio
apt-get update -y
apt-get install -y android-studio
ln -s /opt/android-studio/bin/studio.sh /usr/local/bin/studio
#Akka
cd /opt/
wget http://amstel/ubuntu14/mcscript/akka_2.11-2.3.12.zip
unzip akka_2.11-2.3.12.zip
#Greenfoot
cd /opt
mkdir greenfoot
cd greenfoot
wget http://www.greenfoot.org/download/files/greenfoot-242.deb
dpkg -i greenfoot-242.deb
#Alice
wget http://www.alice.org/downloads/installers/Alice3_unix_Offline_3_2_5_0_0.sh
printf '\n\n\n\n\n\n\n1\n\n\n\nn\n' | sh Alice3_unix_Offline_3_2_5_0_0.sh
#Cuda
cd /opt/
wget http://amstel/ubuntu14/mcscript/cuda_6.5.14_linux_64.run
wget http://amstel/ubuntu14/cuda_exp_script
wget http://amstel/ubuntu14/fresh_cuda.sh
chmod +x cuda_exp_script
chmod +x cuda_6.5.14_linux_64.run
#Minion
cd /etc/salt/
rm minion
wget http://amstel/ubuntu14/minion
#Login Screen Setup
cd /usr/share/lightdm/lightdm.conf.d/
printf '[SeatDefaults]\ngreeter-session=unity-greeter\nuser-session=test\ngreeter-hide-users=true\nallow-guest=false\n' | cat > 50-my.conf
#Turn on Root Login
cd /etc/ssh/
vi sshd_config -c '/PermitRootLogin' -c ':28,d' -c ':wq'
printf 'PermitRootLogin yes' >> sshd_config 

#Fun time key tricks
RSA1_KEY=ssh_host_key
RSA_KEY=ssh_host_rsa_key
DSA_KEY=ssh_host_dsa_key
#make sure correct interface: eth0 or em1
#working on solution.
#CHECK='ifconfig eth0'
#ERROR='error'
#if "${CHECK#*$ERROR}" != "$CHECK"
#then IP = what's below
#else IP = ifconfig em1....
IP=`ifconfig  eth0 | grep inet | awk '{ print $2 }' | awk -F: '{ print $2 }'`
NODE=`host $IP | awk '{ print $5 }' | awk -F. '{ print $1 }'`

cd /opt/
wget -r -l1 http://amstel/ubuntu14/keys/

cp /opt/amstel/ubuntu14/keys/$RSA1_KEY.$NODE /etc/ssh/$RSA1_KEY
cp /opt/amstel/ubuntu14/keys/$RSA1_KEY.$NODE.pub /etc/ssh/$RSA1_KEY.pub
cp /opt/amstel/ubuntu14/keys/$RSA_KEY.$NODE /etc/ssh/$RSA_KEY
cp /opt/amstel/ubuntu14/keys/$RSA_KEY.$NODE.pub /etc/ssh/$RSA_KEY.pub
cp /opt/amstel/ubuntu14/keys/$DSA_KEY.$NODE /etc/ssh/$DSA_KEY
cp /opt/amstel/ubuntu14/keys/$DSA_KEY.$NODE.pub /etc/ssh/$DSA_KEY.pub
cp /opt/amstel/ubuntu14/keys/ssh_known_hosts2 /etc/ssh/
cp -f /opt/amstel/ubuntu14/keys/ssh_config /etc/ssh/

rm -rf /opt/amstel

cd /root
mkdir .ssh/
cd .ssh/
wget http://amstel/ubuntu14/ssh/authorized_keys2
wget http://amstel/ubuntu14/ssh/known_hosts
#Cups Config
cd /opt/
wget http://amstel/ubuntu14/cups_client.sh
#cImage/PIL
cd /usr/local/lib/python2.7/dist-packages/
wget http://amstel/ubuntu14/cImage.py
cp /usr/local/lib/python2.7/dist-packages/cImage.py /usr/local/lib/python3.4/dist-packages/
#TODO: look back on how i did
#Mars/Qtspim
cd /opt
wget http://amstel/ubuntu14/mcscript/Mars4_5.jar
wget http://amstel/ubuntu14/mcscript/mars.sh
wget http://amstel/ubuntu14/mcscript/qtspim_9.1.12_linux64.deb

dpkg -i qtspim_9.1.12_linux64.deb
apt-get install -y -f
dpkg -i qtspim_9.1.12_linux64.deb

#Remove test account script
wget http://amstel/ubuntu14/remove_test_acct.sh
#Avocent bullshit....G12 Only
#cd /etc/udev/rules.d
#printf 'ACTION=="add", SUBSYSTEM=="usb", ATTRS{idVendor}=="0624",TEST=="../power/control", ATTR{../power/control}:="on"' | cat > usb-avocent-matrix-kvm.rules


#installation of the extra apps

cd /opt/
apt-get install python3-pip

#flask & pillow
pip3 install pillow
pip3 install flask

#mysql-client
apt-get -y install mysql-client

#strace & ltrace
apt-get install strace

apt-get install ltrace

#cmake

apt-get install build-essential

#getting the latest cmake (can modify to change the version) at https://cmake.org/download/


wget http://www.cmake.org/files/v3.5/cmake-3.5.2.tar.gz
tar xf cmake-3.5.2.tar.gz
cd cmake-3.5.2
./configure
#uses the cores on the computer to run faster
make -j 4 install
cd ..
#to test run: cmake --version

echo 'ending post installation script'


